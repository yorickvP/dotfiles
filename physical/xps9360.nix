# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, ... }:
{
  imports =
    [ <nixpkgs/nixos/modules/installer/scan/not-detected.nix>
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.blacklistedKernelModules = ["psmouse"];

  boot.kernelPackages = pkgs.linuxPackages_latest;


  # Use the systemd-boot EFI boot loader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;


  hardware.cpu.intel.updateMicrocode = true;


  services.xserver.libinput.enable = true;
  services.thermald.enable = true;

  networking.wireless.enable = true;
  networking.dhcpcd.extraConfig = ''
    noarp
  '';
  hardware.bluetooth.enable = true;
  # https://wiki.archlinux.org/index.php/Dell_XPS_13_(9360)#Module-based_Powersaving_Options
  # might require linux 4.11 
  boot.kernelParams = ["i915.enable_fbc=1" "i915.enable_guc_loading=1" "i915.enable_guc_submission=1" "i915.enable_huc=1" "i915.enable_psr=2" "intel_iommu=on"];
  # now we wait until enable_psr=1 is fixed

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/a751e4ea-f1aa-48e1-9cbe-423878e29b62";
      fsType = "btrfs";
      options = ["defaults" "relatime" "discard"];
    };

  boot.initrd.luks.devices."nix-crypt" = {
    device = "/dev/disk/by-uuid/320ef81d-283f-4916-ac26-ecfb0f31e549";
    allowDiscards = true;
  };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/0E07-7805";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/d9c4c15b-0e9c-47f6-8675-93b1b8de5f9d"; }
    ];

  nix.maxJobs = lib.mkDefault 4;

  environment.systemPackages = [pkgs.btrfs-progs];
  
  # ideal... doesn't work.
  #services.udev.extraRules = ''
  #   KERNEL=="intel_backlight", SUBSYSTEM=="backlight", MODE="666"
  #'';
  # for now
  systemd.services."display-manager".preStart = ''
   chmod a+w $(realpath /sys/class/backlight/intel_backlight/brightness) || true
  '';
  # this makes sure my wifi doesn't take a minute to work
  services.udev.extraRules = ''
    SUBSYSTEM=="firmware", ACTION=="add", ATTR{loading}="-1"
  '';

  services.xserver.videoDrivers = ["modesetting"];
  hardware.opengl.extraPackages = [ pkgs.vaapiIntel ];
  # bigger console font
  i18n.consoleFont = "latarcyrheb-sun32";
}
